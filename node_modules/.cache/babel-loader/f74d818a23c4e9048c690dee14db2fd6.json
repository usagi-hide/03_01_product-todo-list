{"ast":null,"code":"import _slicedToArray from\"/Users/hide/react-todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import'./App.css';import Form from'./components/Form';import TodoList from'./components/TodoList';function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),inputText=_useState2[0],setInputText=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),todos=_useState4[0],setTodos=_useState4[1];var _useState5=useState(\"all\"),_useState6=_slicedToArray(_useState5,2),status=_useState6[0],setStatus=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),filteredTodos=_useState8[0],setFilteredTodos=_useState8[1];useEffect(function(){getLocalTodos();},[]);useEffect(function(){filterHandler();saveLocalTodos();},[todos,status]);var filterHandler=function filterHandler(){switch(status){case'completed':setFilteredTodos(todos.filter(function(todo){return todo.completed===true;}));break;case'uncompleted':setFilteredTodos(todos.filter(function(todo){return todo.completed===false;}));break;default:setFilteredTodos(todos);break;}};var saveLocalTodos=function saveLocalTodos(){localStorage.setItem('todos',JSON.stringify(todos));};var getLocalTodos=function getLocalTodos(){if(localStorage.getItem('todos')===null){localStorage.setItem('todos',JSON.stringify([]));}else{var todoLocal=JSON.parse(localStorage.getItem('todos'));setTodos(todoLocal);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Product Todo List\"})}),/*#__PURE__*/_jsx(Form,{inputText:inputText,todos:todos,setTodos:setTodos,setInputText:setInputText,setStatus:setStatus}),/*#__PURE__*/_jsx(TodoList,{filteredTodos:filteredTodos,setTodos:setTodos,todos:todos})]});}export default App;","map":{"version":3,"sources":["/Users/hide/react-todo-app/src/App.js"],"names":["React","useState","useEffect","Form","TodoList","App","inputText","setInputText","todos","setTodos","status","setStatus","filteredTodos","setFilteredTodos","getLocalTodos","filterHandler","saveLocalTodos","filter","todo","completed","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse"],"mappings":"yOAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CAEA,QAASC,CAAAA,GAAT,EAAe,eAEqBJ,QAAQ,CAAC,EAAD,CAF7B,wCAENK,SAFM,eAEKC,YAFL,8BAGaN,QAAQ,CAAC,EAAD,CAHrB,yCAGNO,KAHM,eAGCC,QAHD,8BAIeR,QAAQ,CAAC,KAAD,CAJvB,yCAINS,MAJM,eAIEC,SAJF,8BAK6BV,QAAQ,CAAC,EAAD,CALrC,yCAKNW,aALM,eAKSC,gBALT,eAObX,SAAS,CAAC,UAAM,CACdY,aAAa,GACd,CAFQ,CAEN,EAFM,CAAT,CAIAZ,SAAS,CAAC,UAAM,CACda,aAAa,GACbC,cAAc,GACf,CAHQ,CAGN,CAACR,KAAD,CAAQE,MAAR,CAHM,CAAT,CAMA,GAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,OAAQL,MAAR,EACE,IAAK,WAAL,CACEG,gBAAgB,CAACL,KAAK,CAACS,MAAN,CAAa,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,SAAL,GAAmB,IAAvB,EAAjB,CAAD,CAAhB,CACA,MACF,IAAK,aAAL,CACEN,gBAAgB,CAACL,KAAK,CAACS,MAAN,CAAa,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,SAAL,GAAmB,KAAvB,EAAjB,CAAD,CAAhB,CACA,MACF,QACEN,gBAAgB,CAACL,KAAD,CAAhB,CACA,MATJ,CAWD,CAZD,CAcA,GAAMQ,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzBI,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BC,IAAI,CAACC,SAAL,CAAef,KAAf,CAA9B,EACH,CAFD,CAGA,GAAMM,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAIM,YAAY,CAACI,OAAb,CAAqB,OAArB,IAAkC,IAAtC,CAA4C,CAC1CJ,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BC,IAAI,CAACC,SAAL,CAAe,EAAf,CAA9B,EACD,CAFD,IAEO,CACL,GAAIE,CAAAA,SAAS,CAAGH,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAX,CAAhB,CACAf,QAAQ,CAACgB,SAAD,CAAR,CACD,CACF,CAPD,CASA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,qCACA,yCADA,EADF,cAIE,KAAC,IAAD,EACE,SAAS,CAAEnB,SADb,CAEE,KAAK,CAAEE,KAFT,CAGE,QAAQ,CAAEC,QAHZ,CAIE,YAAY,CAAEF,YAJhB,CAKE,SAAS,CAAEI,SALb,EAJF,cAYE,KAAC,QAAD,EAAU,aAAa,CAAEC,aAAzB,CAAwC,QAAQ,CAAEH,QAAlD,CAA4D,KAAK,CAAED,KAAnE,EAZF,GADF,CAgBD,CAED,cAAeH,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true))\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  const saveLocalTodos = () => {\n      localStorage.setItem('todos', JSON.stringify(todos));\n  };\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n      <h1>Product Todo List</h1>\n      </header>\n      <Form\n        inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus}\n        \n        />\n      <TodoList filteredTodos={filteredTodos} setTodos={setTodos} todos={todos} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}